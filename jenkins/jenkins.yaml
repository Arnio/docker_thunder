apiVersion: v1
kind: Template
labels:
  application: jenkins
metadata:
  annotations:
    openshift.io/display-name: Jenkins deployments
    tags: jenkins
  name: jenkins
  namespace: openshift
objects:

- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: system:image-puller
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:image-puller
  subjects:
  - kind: ServiceAccount
    name: default
    namespace: ${APP_NAME}
    
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
    labels:
      build: php-fpm-alpine
    name: php-fpm-alpine
  spec:
    lookupPolicy:
      local: false

- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
    labels:
      build: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    lookupPolicy:
      local: false

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: 15g
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: 15Gi


- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    labels:
      app: jenkins-ephemeral
      template: jenkins-ephemeral-template
    name: jenkins
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: jenkins
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: jenkins
      spec:
        containers:
        - env:
          - name: OPENSHIFT_ENABLE_OAUTH
            value: "true"
          - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
            value: "true"
          - name: DISABLE_ADMINISTRATIVE_MONITORS
            value: "false"
          - name: KUBERNETES_MASTER
            value: https://kubernetes.default:443
          - name: KUBERNETES_TRUST_CERTIFICATES
            value: "true"
          - name: JENKINS_SERVICE_NAME
            value: jenkins
          - name: JNLP_SERVICE_NAME
            value: jenkins-jnlp
          - name: INSTALL_PLUGINS
            value: >-
              locale,saferestart,ghprb 
          - name: JENKINS_NAME
            value: ${JENKINS_NAME}
          - name: APP_NAME
            value: ${APP_NAME}                      
          image: docker-registry.default.svc:5000/openshift/jenkins
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /login
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 420
            periodSeconds: 360
            successThreshold: 1
            timeoutSeconds: 240
          name: jenkins
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /login
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 240
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/jenkins
            name: jenkins-pvs
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: jenkins
        serviceAccountName: jenkins
        terminationGracePeriodSeconds: 30
        volumes:
        - name: jenkins-pvs
          persistentVolumeClaim:
            claimName: 15g
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - jenkins
        from:
          kind: ImageStreamTag
          name: jenkins:2
          namespace: openshift
        lastTriggeredImage: docker-registry.default.svc:5000/openshift/jenkins
      type: ImageChange
    - type: ConfigChange

- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
    labels:
      build: php-fpm-alpine
    name: php-fpm-alpine
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: php-fpm-alpine:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: https://github.com/Arnio/php_alpine_base_image
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: alpine:3.10
          namespace: openshift
      type: Docker
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: GZSP98Iv4QhUfzXAVTIF
      type: GitHub
    - generic:
        secret: xnDN6qYyXtzP31nBRzJa
      type: Generic
    - type: ConfigChange
    - imageChange:
        lastTriggeredImageID: docker.io/alpine
      type: ImageChange

- kind: "BuildConfig"
  apiVersion: "v1"
  metadata:
    name: build-base-image
  spec:
    source:
      git:
        uri: "https://github.com/Arnio/php_alpine_base_image.git"
    strategy:
      jenkinsPipelineStrategy:
        jenkinsfilePath: jenkins/jenkinsfile


- kind: "BuildConfig"
  apiVersion: "v1"
  metadata:
    name: build-app-image
  spec:
    source:
      git:
        uri: "https://github.com/Arnio/docker_thunder"
    strategy:
      jenkinsPipelineStrategy:
        jenkinsfilePath: jenkins/jenkinsfile

- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      app: base-build
      name: base-build
    name: base-build
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        jenkinsfile: |-
          node('') {
          stage ('checscm') 
          {
          properties([pipelineTriggers([[$class: 'GitHubPushTrigger'], pollSCM('H/3 * * * *')])])   
          checkout([$class: 'GitSCM', 
              branches: [[name: '*/master']], 
              doGenerateSubmoduleConfigurations: false, 
              extensions: [[$class: 'CleanCheckout']], 
              submoduleCfg: [], 
              userRemoteConfigs: [[credentialsId: 'jenkins-app-git-key', url: 'https://github.com/Arnio/php_alpine_base_image.git']]
          ])}
          stage ('buildInJankins')
            {openshiftBuild(namespace: '${JENKINS_NAME}', buildConfig: 'php-fpm-alpine', showBuildLogs: 'true',  waitTime: '3000000')}
          }
      type: JenkinsPipeline
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: secret101
      type: GitHub
    - generic:
        secret: secret101
      type: Generic

- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${APP_NAME}-deploy
      name: ${APP_NAME}-deploy
    name: ${APP_NAME}-deploy
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        jenkinsfile: |-
          node('') {
          options { 
            timeout(time: 20, unit: 'MINUTES') 
            }  
          stage ('deployInDevelopment')
            {openshiftDeploy(namespace: '${APP_NAME}', deploymentConfig: '${APP_NAME}', waitTime: '3000000')}
          stage ('VerifySiteOnline')
            {sh '''#!/bin/bash
          while [ 1 ]; do
            http_response=$(curl -o /dev/null -s -w "%{http_code}\n" http://${APP_NAME}.${APP_NAME}.svc:80)

            if [ $http_response = "200" ]; then
                break
            fi
          done

          echo ----------------------------------------end
          build------------------------------------

          echo $http_response'''}


          }
      type: JenkinsPipeline
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: secret101
      type: GitHub
    - generic:
        secret: secret101
      type: Generic

- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
    labels:
      build: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: ${APP_NAME}:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: https://github.com/Arnio/docker_thunder
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: php-fpm-alpine:latest
      type: Docker
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: QCe-kDWe7_eYHxA8TtGX
      type: GitHub
    - generic:
        secret: sZ7BonSfltT3CzwLHEAu
      type: Generic
    - type: ConfigChange
    - imageChange:
        lastTriggeredImageID: docker-registry.default.svc:5000/${JENKINS_NAME}/php-fpm-alpine
      type: ImageChange

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/dependencies: '[{"name": "jenkins-jnlp", "namespace":
        "", "kind": "Service"}]'
      service.openshift.io/infrastructure: "true"
    labels:
      app: jenkins-ephemeral
      template: jenkins-ephemeral-template
    name: jenkins
  spec:
    ports:
    - name: web
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      name: jenkins
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: jenkins-ephemeral
      template: jenkins-ephemeral-template
    name: jenkins-jnlp
  spec:
    ports:
    - name: agent
      port: 50000
      protocol: TCP
      targetPort: 50000
    selector:
      name: jenkins
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      haproxy.router.openshift.io/timeout: 4m
      openshift.io/host.generated: "true"
      template.openshift.io/expose-uri: http://{.spec.host}{.spec.path}
    labels:
      app: jenkins-ephemeral
      template: jenkins-ephemeral-template
    name: jenkins
  spec:
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: jenkins
      weight: 100
    wildcardPolicy: None

parameters:

- description: Add devops user to openshift
  displayName: Add devops user to openshift
  name: USER_NAME
  required: true
  value: devopsuser

- description: Add app name to openshift
  displayName: Add app name to openshift
  name: APP_NAME
  required: true

- description: Jenkins name to openshift
  displayName: Jenkins name to openshift
  name: JENKINS_NAME
  required: true
