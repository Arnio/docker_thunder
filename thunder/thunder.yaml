
apiVersion: v1
kind: Template
labels:
  application: ${APP_NAME}
metadata:
  annotations:
    openshift.io/display-name: ${APP_NAME} Deployment Template for Regular deployments
    tags: ${APP_NAME},php
  name: ${APP_NAME}-php-alpine
  namespace: openshift
objects:

- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: edit
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: edit
  subjects:
  - kind: ServiceAccount
    name: jenkins
    namespace: ${JENKINS_NAME}
    

- apiVersion: v1
  kind: Secret
  metadata:
    annotations:
      template.openshift.io/expose-database_name: '{.data[''database-name'']}'
      template.openshift.io/expose-password: '{.data[''database-password'']}'
      template.openshift.io/expose-root_password: '{.data[''database-root-password'']}'
      template.openshift.io/expose-username: '{.data[''database-user'']}'
    labels:
      app: mysql-persistent
      template: mysql-persistent-template
    name: mysql
  stringData:
    database-name: ${MYSQL_DATABASE}
    database-password: ${MYSQL_PASSWORD}
    database-root-password: ${MYSQL_ROOT_PASSWORD}
    database-user: ${MYSQL_USER} 
  type: Opaque


- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: mysql-pvc
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: 4g
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: 4Gi

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: 5g
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: 5Gi

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: site-pvc
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: 15Gi

- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    generation: 10
    labels:
      app: mysql-persistent
      template: mysql-persistent-template
    name: mysql
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: mysql
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 800
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: mysql
      spec:
        containers:
        - env:
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: mysql
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: mysql
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-root-password
                name: mysql
          - name: MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: mysql
          image: docker-registry.default.svc:5000/openshift/mysql
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3306
            timeoutSeconds: 1
          name: mysql
          ports:
          - containerPort: 3306
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - MYSQL_PWD="$MYSQL_PASSWORD" mysql -h 127.0.0.1 -u $MYSQL_USER -D $MYSQL_DATABASE
                -e 'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mysql/data
            name: mysql-base
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mysql-base
          persistentVolumeClaim:
            claimName: mysql-pvc
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - mysql
        from:
          kind: ImageStreamTag
          name: mysql:${MYSQL_VERSION}
          namespace: openshift
        lastTriggeredImage: docker-registry.default.svc:5000/openshift/mysql
      type: ImageChange
    - type: ConfigChange

- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APP_NAME}
      application: ${APP_NAME}
    name: ${APP_NAME}
    namespace: ${APP_NAME}
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        post:
          execNewPod:
            command:
              - /bin/sh
              - -c
              - initapp.sh
            containerName: ${APP_NAME}
            volumes:
              - app-sites
              - ${APP_NAME}-nginx-log
              - php-log
          failurePolicy: Abort
        timeoutSeconds: 800
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: ${APP_NAME}
          deploymentconfig: ${APP_NAME}
      spec:
        containers:
          - env:
              - name: EZ
                value: Europe/Kiev
              - name: MYSQL_HOST
                value: mysql.${APP_NAME}.svc
              - name: MYSQL_USER
                valueFrom:
                  secretKeyRef:
                    key: database-user
                    name: mysql
              - name: MYSQL_PASSWORD
                valueFrom:
                  secretKeyRef:
                    key: database-password
                    name: mysql
              - name: MYSQL_ROOT_PASSWORD
                valueFrom:
                  secretKeyRef:
                    key: database-root-password
                    name: mysql
              - name: MYSQL_DATABASE
                valueFrom:
                  secretKeyRef:
                    key: database-name
                    name: mysql
            image: >-
              docker-registry.default.svc:5000/${JENKINS_NAME}/${APP_NAME}
            imagePullPolicy: Always
            name: ${APP_NAME}
            ports:
              - containerPort: 80
                protocol: TCP
            resources:
              limits:
                cpu: 500m
                memory: 512Mi
              requests:
                cpu: 100m
                memory: 256Mi
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
              - mountPath: /var/log/nginx
                name: ${APP_NAME}-nginx-log
              - mountPath: /var/www/html/thunder/sites/default
                name: app-sites
              - mountPath: /var/log/php7
                name: php-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
          - name: ${APP_NAME}-nginx-log
            persistentVolumeClaim:
              claimName: 5g
          - name: app-sites
            persistentVolumeClaim:
              claimName: site-pvc
          - name: php-log
            persistentVolumeClaim:
              claimName: 4g
    test: false
    triggers:
      - imageChangeParams:
          containerNames:
            - ${APP_NAME}
          from:
            kind: ImageStreamTag
            name: '${APP_NAME}:latest'
            namespace: ${JENKINS_NAME}
          lastTriggeredImage: >-
            docker-registry.default.svc:5000/${JENKINS_NAME}/${APP_NAME}
        type: ImageChange
      - type: ConfigChange


- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      template.openshift.io/expose-uri: mysql://{.spec.clusterIP}:{.spec.ports[?(.name=="mysql")].port}
    labels:
      app: mysql-persistent
      template: mysql-persistent-template
    name: mysql
  spec:
    ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: 3306
    selector:
      name: mysql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
    
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    ports:
    - name: 80-tcp
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      deploymentconfig: ${APP_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}

- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    port:
      targetPort: 80-tcp
    to:
      kind: Service
      name: ${APP_NAME}
      weight: 100
    wildcardPolicy: None

- apiVersion: autoscaling/v1
  kind: HorizontalPodAutoscaler
  metadata:
    labels:
      app: ${APP_NAME}
      application: ${APP_NAME}
      component: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    maxReplicas: 3
    minReplicas: 1
    scaleTargetRef:
      apiVersion: extensions/v1beta1
      kind: DeploymentConfig
      name: ${APP_NAME}
    targetCPUUtilizationPercentage: 70

parameters:

- description: The name of the OpenShift Service exposed for the database.
  displayName: Database Service Name
  name: DATABASE_SERVICE_NAME
  required: true
  value: mysql
  
- description: Username for MySQL user that will be used for accessing the database.
  displayName: MySQL Connection Username
  name: MYSQL_USER  
  from: 'user[A-Z0-9]{3}'
  generate: expression
  required: true
  

- description: Password for the MySQL connection user.
  displayName: MySQL Connection Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: MYSQL_PASSWORD
  required: true
  

- description: Password for the MySQL root user.
  displayName: MySQL root user Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: MYSQL_ROOT_PASSWORD
  required: true

- description: Name of the MySQL database accessed.
  displayName: MySQL Database Name
  from: 'drupal[a-z0-9]{3}${APP_NAME}'
  generate: expression
  name: MYSQL_DATABASE
  required: true
  

- description: Volume space available for data, e.g. 512Mi, 2Gi.
  displayName: Volume Capacity
  name: VOLUME_CAPACITY
  required: true
  value: 1Gi

- description: Version of MySQL image to be used (5.7, or latest).
  displayName: Version of MySQL Image
  name: MYSQL_VERSION
  required: true
  value: '5.7'

- description: Add app name to openshift
  displayName: Add app name to openshift
  name: APP_NAME
  required: true

- description: Jenkins name to openshift
  displayName: Jenkins name to openshift
  name: JENKINS_NAME
  required: true
 